name: Deploy to AWS Lambda

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  cleanup:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }} 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install AWS CLI
        run: |
          pip install awscli --upgrade --user
          export PATH=$PATH:$HOME/.local/bin

      - name: Configure AWS CLI
        run: |
          aws configure set default.region us-east-1

      - name: Run cleanup.sh script
        run: |
          chmod +x cleanup.sh
          ./cleanup.sh

  deploy-s3-bucket:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy S3 Bucket using CloudFormation
        run: |
          aws cloudformation deploy \
            --template-file s3-template.yml \
            --stack-name havamal-talks-serverless-s3 \
            --parameter-overrides LambdaS3Bucket=${{ secrets.S3_BUCKET_NAME }} NvdApiKey=${{ secrets.NVD_API_KEY }} \
            --capabilities CAPABILITY_IAM
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  build-upload-and-deploy-lambda:
    runs-on: ubuntu-latest
    needs: deploy-s3-bucket
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21.6'

      - name: Build Lambda Function
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o bootstrap
          zip function.zip bootstrap

      - name: Upload to S3
        run: aws s3 cp function.zip s3://${{ secrets.S3_BUCKET_NAME }}/function.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Deploy Lambda Function using CloudFormation
        id: deploy_lambda
        run: |
          aws cloudformation deploy \
            --template-file lambda-fetch-template.yml \
            --stack-name havamal-talks-serverless-lambda \
            --parameter-overrides LambdaS3Bucket=${{ secrets.S3_BUCKET_NAME }} NvdApiKey=${{ secrets.NVD_API_KEY }} \
            --capabilities CAPABILITY_IAM
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Delete Stack if Deployment Fails
        if: failure() && steps.deploy_lambda.outcome == 'failure'
        run: aws cloudformation delete-stack --stack-name havamal-talks-serverless-lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
